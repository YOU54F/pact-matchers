{
  "consumer": {
    "name": "v3-consumer-pact-js"
  },
  "interactions": [
    {
      "description": "A request for get all v3 matchers",
      "providerStates": [
        {
          "name": "Server is V3"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/matchers/v3"
      },
      "response": {
        "body": {
          "boolean": true,
          "booleanFalse": false,
          "booleanTrue": true,
          "decimal": 12.34,
          "decimalPattern": 10.1,
          "eachLikeArray": [[1, 2, 3]],
          "eachLikeComplexStructure": [
            [
              {
                "colour": "red",
                "size": 10,
                "tag": [
                  ["jumper", "shirt"],
                  ["jumper", "shirt"]
                ]
              }
            ]
          ],
          "eachLikeNested": [["blue"]],
          "eachLikeNull": [null],
          "eachLikeObject": [
            {
              "a": 1
            }
          ],
          "eachLikeOptionsMinOne": [
            {
              "a": 1
            }
          ],
          "eachLikeOptionsMinThree": [
            {
              "a": 1
            },
            {
              "a": 1
            },
            {
              "a": 1
            }
          ],
          "eachLikeTerm": [
            {
              "colour": "red"
            }
          ],
          "eachLikeValue": ["test"],
          "eachLikeWithMatchers": [
            {
              "id": 10
            }
          ],
          "integer": 101,
          "integerPattern": 10,
          "like": "myspecialvalue",
          "regex": "myawesomeword",
          "string": "some string",
          "stringPattern": "test",
          "uuid": "e2490de5-5bd3-43d5-b7c4-526e33f71304",
          "uuidPattern": "ce118b6e-d8e1-11e7-9296-cec278b6b50a"
        },
        "generators": {
          "body": {
            "$.decimal": {
              "digits": 10,
              "type": "RandomDecimal"
            },
            "$.integer": {
              "max": 10,
              "min": 0,
              "type": "RandomInt"
            },
            "$.uuid": {
              "type": "Uuid"
            }
          }
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "body": {
            "$.boolean": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.booleanFalse": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.booleanTrue": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.decimal": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "decimal"
                }
              ]
            },
            "$.decimalPattern": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "decimal"
                }
              ]
            },
            "$.eachLikeArray": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.eachLikeComplexStructure": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.eachLikeComplexStructure[*]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.eachLikeComplexStructure[*][*].colour": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "red|green|blue"
                }
              ]
            },
            "$.eachLikeComplexStructure[*][*].size": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.eachLikeComplexStructure[*][*].tag": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type",
                  "min": 2
                }
              ]
            },
            "$.eachLikeComplexStructure[*][*].tag[*][0]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                },
                {
                  "match": "type"
                }
              ]
            },
            "$.eachLikeComplexStructure[*][*].tag[*][1]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                },
                {
                  "match": "type"
                }
              ]
            },
            "$.eachLikeNested": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.eachLikeNested[*]": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.eachLikeNull": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.eachLikeObject": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.eachLikeOptionsMinOne": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.eachLikeOptionsMinThree": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type",
                  "min": 3
                }
              ]
            },
            "$.eachLikeTerm": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.eachLikeTerm[*].colour": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "red|green"
                }
              ]
            },
            "$.eachLikeValue": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.eachLikeWithMatchers": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.eachLikeWithMatchers[*].id": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.integer": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "integer"
                }
              ]
            },
            "$.integerPattern": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "integer"
                }
              ]
            },
            "$.like": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.regex": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "\\w+"
                }
              ]
            },
            "$.string": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.stringPattern": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.uuid": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
                }
              ]
            },
            "$.uuidPattern": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
                }
              ]
            }
          }
        },
        "status": 200
      }
    },
    {
      "description": "A request for get some v3 matchers",
      "providerStates": [
        {
          "name": "Server is V3"
        }
      ],
      "request": {
        "method": "GET",
        "path": "/matchers/v3"
      },
      "response": {
        "body": {
          "anotherStringMatcher": {
            "anotherSetting": "this",
            "nestedSetting": {
              "anotherStringMatcherSubSetting": true
            }
          },
          "arrayMatcher": {
            "lotsOfValues": ["useful", "useful", "useful"]
          },
          "arrayOfMatchers": {
            "lotsOfValues": [
              {
                "baz": "bat",
                "foo": "bar"
              },
              {
                "baz": "bat",
                "foo": "bar"
              },
              {
                "baz": "bat",
                "foo": "bar"
              }
            ]
          },
          "stringMatcher": {
            "awesomeSetting": "a string"
          }
        },
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "body": {
            "$": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.anotherStringMatcher.anotherSetting": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "regex",
                  "regex": "this|that"
                }
              ]
            },
            "$.anotherStringMatcher.nestedSetting.anotherStringMatcherSubSetting": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            },
            "$.arrayMatcher.lotsOfValues": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type",
                  "min": 3
                }
              ]
            },
            "$.arrayOfMatchers.lotsOfValues": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type",
                  "min": 3
                }
              ]
            },
            "$.arrayOfMatchers.lotsOfValues[*].baz": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                },
                {
                  "match": "type"
                },
                {
                  "match": "type"
                }
              ]
            },
            "$.stringMatcher.awesomeSetting": {
              "combine": "AND",
              "matchers": [
                {
                  "match": "type"
                }
              ]
            }
          }
        },
        "status": 200
      }
    }
  ],
  "metadata": {
    "pact-js": {
      "version": "10.1.4"
    },
    "pactRust": {
      "ffi": "0.3.12",
      "models": "0.4.5"
    },
    "pactSpecification": {
      "version": "3.0.0"
    }
  },
  "provider": {
    "name": "v3-provider"
  }
}
